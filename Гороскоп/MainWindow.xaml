<Window
    x:Name="WindowMain"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:System="clr-namespace:System;assembly=mscorlib" x:Class="WpfApplication3.MainWindow"
        MouseLeftButtonDown="Window_MouseLeftButtonDown"
        mc:Ignorable="d"
    Title="MainWindow" Height="Auto" Width="Auto" Background="{x:Null}" Visibility="Visible" AllowsTransparency="True" WindowStyle="None" SizeToContent="WidthAndHeight" IsHitTestVisible="True" Focusable="False" Foreground="{x:Null}" MinWidth="280" MinHeight="130" ResizeMode="NoResize" FontFamily="Calibri" Closing="WindowMain_Closing" Loaded="WindowMain_Loaded" ShowInTaskbar="False" ShowActivated="False" >
    <Grid x:Name="gridOpacity" Opacity="0.8" ClipToBounds="True" AllowDrop="True" Grid.IsSharedSizeScope="True">
        <Border x:Name="border" Width="auto" BorderThickness="2"
                CornerRadius="10,10,10,10" ClipToBounds="True" Focusable="True" Grid.RowSpan="2" Grid.IsSharedSizeScope="True">
            <Border.Background>
                <SolidColorBrush Color="#FF070E25"/>
            </Border.Background>
            <Grid Opacity="0.8" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" >
                <StackPanel>
                    <TabControl x:Name="tabControl" Margin="10,7,10,0" VerticalAlignment="Top"  Background="{x:Null}" BorderBrush="{x:Null}" Grid.IsSharedSizeScope="True" Foreground="{x:Null}" VerticalContentAlignment="Top"  Height="150" Width="300" ScrollViewer.CanContentScroll="True" MinWidth="240" MinHeight="100" FontFamily="Arial">
                        <TabControl.Resources>
                            <Style TargetType="{x:Type TabItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TabItem}">
                                            <Grid x:Name="Panel">
                                                <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="HeaderTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <TextBlock FontWeight="Bold" Text="{Binding}"/>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TabControl.Resources>
                        <TabItem x:Name="tabPesentDay" Header="Сегодня" Foreground="#FFC7C3C3" Margin="29,0,-29,0">
                            <ScrollViewer Foreground="{x:Null}" HorizontalContentAlignment="Stretch" TextOptions.TextFormattingMode="Display" VerticalAlignment="Top" CanContentScroll="True" VerticalScrollBarVisibility="Hidden">
                                <TextBlock x:Name="presentDay" HorizontalAlignment="Left" ClipToBounds="True" Padding="0" Foreground="#FFAAAAAA" FontWeight="Normal" TextOptions.TextFormattingMode="Display" VerticalAlignment="Top" TextWrapping="WrapWithOverflow" />
                            </ScrollViewer>
                        </TabItem>
                        <TabItem x:Name="tabTomorrow" Header="Завтра" Foreground="#FFC7C3C3" Margin="29,0,-29,0">
                            <ScrollViewer Foreground="{x:Null}" VerticalScrollBarVisibility="Hidden"  HorizontalContentAlignment="Stretch" VerticalAlignment="Top">
                                <TextBlock x:Name="tomorrow" HorizontalAlignment="Left" ClipToBounds="True" Padding="0" Margin="0,0,0,0" Foreground="#FFAAAAAA" FontWeight="Normal" VerticalAlignment="Top" TextOptions.TextFormattingMode="Display" TextWrapping="WrapWithOverflow" />
                            </ScrollViewer>
                        </TabItem>
                        <TabItem x:Name="tabWeek" Header="Неделя" Foreground="#FFC7C3C3" Margin="29,0,-29,0" >
                            <ScrollViewer Foreground="{x:Null}" VerticalScrollBarVisibility="Hidden">
                                <TextBlock x:Name="week" HorizontalAlignment="Left" ClipToBounds="True" TextTrimming="CharacterEllipsis" Padding="0" Margin="0,0,0,0" Foreground="#FFAAAAAA" FontWeight="Normal" VerticalAlignment="Top" TextOptions.TextFormattingMode="Display" LineStackingStrategy="BlockLineHeight" TextWrapping="WrapWithOverflow" />
                            </ScrollViewer>
                        </TabItem>
                    </TabControl>
                    <Expander x:Name="expander" Header="Все знаки зодиака" Margin="10,0,10,10" Panel.ZIndex="2" ScrollViewer.VerticalScrollBarVisibility="Disabled" FlowDirection="RightToLeft" Style="{DynamicResource PlusMinusExpanderStyle}" Foreground="#FFE5E5E5" Grid.IsSharedSizeScope="True" ScrollViewer.CanContentScroll="True">
                        <StackPanel FlowDirection="LeftToRight" VerticalAlignment="Top" Margin="-1,0" Width="Auto">
                            <Grid Width="Auto" Height="auto" VerticalAlignment="Top" Margin="10,0,10,15">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" MinHeight="70"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="0*"/>
                                </Grid.RowDefinitions>

                                <Button x:Name="buttonAries" Content="Овен" Height="50" Margin="1,1,1,0" VerticalAlignment="Top" Width="70" Style="{DynamicResource ButtonZodiacSignStyle}" HorizontalAlignment="Left" Grid.Column="1" Click="buttonAries_Click">
                                    <Button.Background>
                                        <ImageBrush Stretch="Uniform" ImageSource="pack://siteoforigin:,,,/Resources/images/aries.png"/>
                                    </Button.Background>
                                </Button>
                                <Button x:Name="buttonGemini" Content="Близнецы" Height="50" Margin="8,1,13,0" VerticalAlignment="Top" Width="70" Style="{DynamicResource ButtonZodiacSignStyle}" Grid.Column="3" Click="buttonGemini_Click" HorizontalAlignment="Right">
                                    <Button.Background>
                                        <ImageBrush Stretch="Uniform" ImageSource="pack://siteoforigin:,,,/Resources/images/gemini.png"/>
                                    </Button.Background>
                                </Button>
                                <Button x:Name="buttonTaurus" Content="Телец" Height="50" Margin="66,0,74,0" VerticalAlignment="Top" Width="70" Style="{DynamicResource ButtonZodiacSignStyle}" HorizontalAlignment="Center" Grid.Column="2" Click="buttonTaurus_Click">
                                    <Button.Background>
                                        <ImageBrush Stretch="Uniform" ImageSource="pack://siteoforigin:,,,/Resources/images/taurus.png"/>
                                    </Button.Background>
                                </Button>
                                <Button x:Name="buttonCancer" Content="Рак" HorizontalAlignment="Left" Height="50" VerticalAlignment="Top" Width="70" Style="{DynamicResource ButtonZodiacSignStyle}" Grid.Column="1" Grid.Row="1" Click="buttonCancer_Click" Margin="1,15,1,0">
                                    <Button.Background>
                                        <ImageBrush Stretch="Uniform" ImageSource="pack://siteoforigin:,,,/Resources/images/cancer.png"/>
                                    </Button.Background>
                                </Button>
                                <Button x:Name="buttonLeo" Content="Лев" HorizontalAlignment="Center" Height="50" Margin="66,15,74,0" VerticalAlignment="Top" Width="70" Style="{DynamicResource ButtonZodiacSignStyle}" Grid.Column="2" Grid.Row="1" Click="buttonLeo_Click">
                                    <Button.Background>
                                        <ImageBrush Stretch="Uniform" ImageSource="pack://siteoforigin:,,,/Resources/images/leo.png"/>
                                    </Button.Background>
                                </Button>
                                <Button x:Name="buttonVirgo" Content="Дева" HorizontalAlignment="Right" Height="50" Margin="8,15,13,0" VerticalAlignment="Top" Width="70" Style="{DynamicResource ButtonZodiacSignStyle}" Grid.Column="3" Grid.Row="1" Click="buttonVirgo_Click">
                                    <Button.Background>
                                        <ImageBrush Stretch="Uniform" ImageSource="pack://siteoforigin:,,,/Resources/images/virgo.png"/>
                                    </Button.Background>
                                </Button>
                                <Button x:Name="buttonLibra" Content="Весы" HorizontalAlignment="Left" Height="50" VerticalAlignment="Top" Width="70" Style="{DynamicResource ButtonZodiacSignStyle}" Grid.Column="1" Grid.Row="2" Click="buttonLibra_Click" Margin="1,16,1,0">
                                    <Button.Background>
                                        <ImageBrush Stretch="Uniform" ImageSource="pack://siteoforigin:,,,/Resources/images/libra.png"/>
                                    </Button.Background>
                                </Button>
                                <Button x:Name="buttonScorpio" Content="Скорпион" HorizontalAlignment="Center" Height="50" Margin="66,16,74,0" VerticalAlignment="Top" Width="70" Style="{DynamicResource ButtonZodiacSignStyle}" Grid.Column="2" Grid.Row="2" Click="buttonScorpio_Click">
                                    <Button.Background>
                                        <ImageBrush Stretch="Uniform" ImageSource="pack://siteoforigin:,,,/Resources/images/scorpio.png"/>
                                    </Button.Background>
                                </Button>
                                <Button x:Name="buttonSagittarius" Content="Стрелец" HorizontalAlignment="Right" Height="50" Margin="8,16,13,0" VerticalAlignment="Top" Width="70" Style="{DynamicResource ButtonZodiacSignStyle}" Grid.Column="3" Grid.Row="2" Click="buttonSagittarius_Click">
                                    <Button.Background>
                                        <ImageBrush Stretch="Uniform" ImageSource="pack://siteoforigin:,,,/Resources/images/sagittarius.png"/>
                                    </Button.Background>
                                </Button>
                                <Button x:Name="buttonCapricorn" Content="Козерок" HorizontalAlignment="Left" Height="50" Margin="1,16,1,0" VerticalAlignment="Top" Width="70" Style="{DynamicResource ButtonZodiacSignStyle}" Grid.Column="1" Grid.Row="3" Click="buttonCapricorn_Click">
                                    <Button.Background>
                                        <ImageBrush Stretch="Uniform" ImageSource="pack://siteoforigin:,,,/Resources/images/capricorn.png"/>
                                    </Button.Background>
                                </Button>
                                <Button x:Name="buttonAquarius" Content="Водолей" HorizontalAlignment="Center" Height="50" Margin="66,16,74,0" VerticalAlignment="Top" Width="70" Style="{DynamicResource ButtonZodiacSignStyle}" Grid.Column="2" Grid.Row="3" Click="buttonAquarius_Click">
                                    <Button.Background>
                                        <ImageBrush Stretch="Uniform" ImageSource="pack://siteoforigin:,,,/Resources/images/aquarius.png"/>
                                    </Button.Background>
                                </Button>
                                <Button x:Name="buttonPisces" Content="Рыбы" HorizontalAlignment="Right" Height="50" Margin="8,16,13,0" VerticalAlignment="Top" Width="70" Style="{DynamicResource ButtonZodiacSignStyle}" Grid.Column="3" Grid.Row="3" Click="buttonPisces_Click">
                                    <Button.Background>
                                        <ImageBrush Stretch="Uniform" ImageSource="pack://siteoforigin:,,,/Resources/images/pisces.png"/>
                                    </Button.Background>
                                </Button>
                            </Grid>
                        </StackPanel>
                    </Expander>
                </StackPanel>
            </Grid>
        </Border>

        <Grid  Margin="0" RenderTransformOrigin="0.5,0.5" OverridesDefaultStyle="True" ScrollViewer.VerticalScrollBarVisibility="Disabled" VerticalAlignment="Top" Grid.IsSharedSizeScope="True">
            <Image Source="Resources/close.png" Margin="0,16,15,0" MouseLeftButtonDown="Image_MouseLeftButtonDown" RenderTransformOrigin="0.65,0.55" HorizontalAlignment="Right" VerticalAlignment="Top" Width="10" Height="11" />
            <Image Source="Resources/setting.png" Margin="0,15,35,0" RenderTransformOrigin="0.65,0.55" HorizontalAlignment="Right" VerticalAlignment="Top" MouseLeftButtonDown="Image_MouseLeftButtonDown_1" Width="12" Height="12" />
            <Image x:Name="currentZodiac_image" Height="25" Margin="10,5,0,0" Source="Resources/images/aquarius.png" Opacity="0.8" ToolTip="Текущий гороскоп" Width="30" VerticalAlignment="Top" HorizontalAlignment="Left"/>
        </Grid>
    </Grid>

    <Window.Resources>
        <Style x:Key="Expander" TargetType="{x:Type Expander}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">

                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BindingGroup" Value="{x:Null}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Black"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="Background" Value="Black"/>
                    <Setter Property="BorderBrush" Value="Wheat"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>

        </Style>
        <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#FF000000"/>
        <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF000000"/>
        <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070"/>
        <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="#FF333333"/>
        <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333"/>
        <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="-90"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="180"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Stretch" SnapsToDevicePixels="false" Stroke="{DynamicResource Button.Disabled.Border}" StrokeThickness="2" VerticalAlignment="Stretch" Margin="5.063,3.189,5.229,6.356" d:LayoutOverrides="Width, Height"/>
                                </Grid>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="arrow" Value="#FFC7C3C3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="arrow" Value="#FFC7C3C3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="arrow" Value="#FFC7C3C3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="90"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
                                <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
                                <Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PlusMinusExpanderStyle" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{DynamicResource ExpanderUpHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" BorderBrush="{DynamicResource Button.Disabled.Border}"/>
                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Right">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Up">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Left">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonZodiacSignStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="#FFC7C3C3"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="Center" Margin="-1,0,-1,-13.154" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Bottom" OpacityMask="Red"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>-->
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!-- <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>-->
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Color x:Key="colorBorder">#FF070E25</Color>
    </Window.Resources>
</Window>
